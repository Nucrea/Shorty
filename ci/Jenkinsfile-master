pipeline {
    agent any

    environment {
        SHORTY_NAME="shorty-master"
        NETWORK_NAME="shorty-network"
    }

    stages {
        stage('Build') {
            steps {
                sh "docker build . -t ${env.SHORTY_NAME}"
            }
        }
        stage('Check running') {
            steps {
                sh "docker stop ${env.SHORTY_NAME} || true"
                sh "docker rm ${env.SHORTY_NAME} || true"

                sh "docker run \
                    --name=${env.SHORTY_NAME} \
                    --network=${env.NETWORK_NAME} \
                    --log-driver=loki \
                    --log-opt loki-url=${env.SHORTY_LOKI_URL} \
                    --log-opt loki-retries=5 \
                    --log-opt loki-batch-size=400 \
                    -p ${SHORTY_APP_PORT}:${SHORTY_APP_PORT} \
                    -e SHORTY_MINIO_ENDPOINT=${env.SHORTY_MINIO_ENDPOINT} \
                    -e SHORTY_MINIO_ACCESS_KEY=${env.SHORTY_MINIO_ACCESS_KEY} \
                    -e SHORTY_MINIO_ACCESS_SECRET=${env.SHORTY_MINIO_ACCESS_SECRET} \
                    -e SHORTY_OPENTELEMETRY_URL=${env.SHORTY_OPENTELEMETRY_URL} \
                    -e SHORTY_POSTGRES_URL=${env.SHORTY_POSTGRES_URL} \
                    -e SHORTY_REDIS_URL=${env.SHORTY_REDIS_URL} \
                    -e SHORTY_APP_URL=${env.SHORTY_APP_URL} \
                    -e SHORTY_APP_PORT=${env.SHORTY_APP_PORT} \
                    -d ${env.SHORTY_NAME}"
                
                sh 'sleep 1'
                sh "curl http://127.0.0.1:${SHORTY_APP_PORT}/health"
            }
        }
    }
}